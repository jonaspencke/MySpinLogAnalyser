%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: MySpinLogAnalyser
file_extensions:
  - msp
  - myspin
  - txt
first_line_match: ^\d\d\/\d\d\/\d\d\d\d-\d\d:\d\d:\d\d.*$
scope: text.myspin
contexts:
  main:
# {{{ General stuff
    - match: '"'
      scope: string

    - match: '//.*$'
      scope: comment

    - match: '\b([Ss]tart|[Ss]top|[Ee]rror|fail|false|true|timeout.*[\d\.].*|terminate|shutdown|nil|null|disconnect)\w*\b'
      scope: keyword

    - match: '^.*ERROR/.*$'
      scope: myspin.error

    - match: '^.*WARNING/.*$'
      scope: myspin.warning

    - match: '^.*FATAL\].*$'
      scope: myspin.fatal

    - match: '^.*Notification\].*$'
      scope: myspin.notification

    - match: '\[MySpinServerSDK (did|will|application).*$'
      scope: myspin.lifecycle

    - match: '-\[\b\w*\b start[a-zA-Z]*\b\]'
      scope: myspin.lifecycle.start
# }}}
# {{{ Match SDK and Protocol Version
    - match: '\w*SDK [vV]ersion: \d\.\d\.\d(\.\d)?'
      scope: myspin.version

    - match: '\w*Protocol: V\d\.\d\.\d'
      scope: myspin.version.protocol
# }}}
# {{{ Match app urls
    - match: '[a-z]+\.[a-z]+\.[a-z]+(\.[a-zA-Z0-9-]*)*'
      scope: myspin.url
# }}}
# {{{ Device Listener
    - match: '^.*\[MSSEAFDeviceListener (accessoryDidDisconnectNotification|connectToAccessories].*accessory candidate).*$'
      scope: myspin.device.listener

    - match: '^.*MSSUDPDeviceListener (receiveIPAddressBroadcast|connectTo:.*(ignoring|connecting)|checkUnavailable.*lost available).*$'
      scope: myspin.device.listener

    - match: '\[MSAIVIAvailabilityChecker (start|handleDiscoveredNetService:)\]'
      scope: myspin.device.checker

    - match: '\[MSAIVIAvailabilityChecker handleLostNetService.*unavailable$'
      scope: myspin.device.checker.fail
# }}}
# {{{ Streams
    - match: '^.*\[MSSGenericStreamDevice (init|dealloc).*$'
      scope: myspin.device.stream

    - match: '^.*\[MSSGenericStreamDevice.*NSStreamEventEndEncountered.*$'
      scope: myspin.device.stream.fail

    - match: '^.*\[MSSGenericStreamDevice.*NSStreamEventErrorOccurred.*$'
      scope: myspin.device.stream.fail
#  }}}
# {{{ ScreenManager
    - match: '\[MSSScreenManager (requestFrameDataForRect.*Received framebuffer request|.*received framebuffer request).*$'
      scope: myspin.screen.request

    - match: '\[MSSScreenManager (answerPendingRequests\].*answer pending request|requestFrameDataForRect.*answer framebuffer.*)'
      scope: myspin.screen.answer

    - match: '\[MSSScreenManager requestFrameDataForRect.*saving incremental request as pending'
      scope: myspin.screen.incremental
# }}}
# {{{ ScreenCapturer
    - match: 'MySpinScreenCapturingMethod.*\b'
      scope: myspin.screen.capture
# }}}
